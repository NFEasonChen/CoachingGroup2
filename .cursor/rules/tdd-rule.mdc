---
description: 
globs: 
alwaysApply: false
---
# C# TDD Development Rules for Cursor AI

## Project Context
This is a C# Test-Driven Development (TDD) project using NUnit testing framework, following Simple Design Principles, Coding Dojo Kata practices, and IPO (Input-Process-Output) model.

## Core Development Philosophy

### TDD Red-Green-Refactor Cycle
1. **RED**: Always write a failing NUnit test first
2. **GREEN**: Write minimal C# code to pass the test
3. **REFACTOR**: Improve code while keeping tests green

### Simple Design Principles (Priority Order)
1. **Passes all tests** - All NUnit tests must pass
2. **Expresses intent** - Code clearly communicates its purpose
3. **No duplication** - Eliminate code and concept duplication
4. **Minimal elements** - Fewest classes, methods, properties needed

### IPO Model Application
Every method/feature must clearly define:
- **Input**: Parameters, dependencies, preconditions
- **Process**: Core logic, algorithms, business rules
- **Output**: Return values, side effects, postconditions
